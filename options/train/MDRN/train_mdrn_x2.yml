# general settings
name: train_MDRN_X2_edge_loss_exp_5 #train_MDRN_X2_deblur #train_MDRN_X2_denoise #train_MDRN_X2
model_type: SRModel
scale: 2
num_gpu: 1 #auto  # set num_gpu: 0 for cpu mode
manual_seed: 1234

# dataset and data loader settings
datasets:
  train:
    name: DIV2k
    type: PairedImageDataset
    dataroot_gt: datasets/DL2K/HR_mod2_sub #datasets/DL2K/DL2K_train_HR_sub
    dataroot_lq: datasets/DL2K/X2_sub
#    meta_info_file: basicsr/data/meta_info/meta_info_DIV2K800sub_GT.txt
    # (for lmdb)
    # dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub.lmdb
    # dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic_X2_sub.lmdb
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb
#    pin_memory: true
    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4 #8  # If Broken Pipe (set small, as 4)
    batch_size_per_gpu: 64 #32 #64
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: DIV2k
    type: PairedImageDataset
    dataroot_gt: datasets/testsets/DIV2K/HR_mod2
    dataroot_lq: datasets/testsets/DIV2K/X2
    io_backend:
      type: disk

# network structures
network_g:
  type: MDRN
  upscale: 2

# path
path:
  pretrain_network_g: /home/aleks/main/huawei/ISR_Task_2023/pretrain_models/mdrn/mdrn_x2.pth #~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-6 #!!float 2e-3
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 500000, 800000, 900000, 950000]
    gamma: 0.5

  total_iter: 20000 #1000000
  warmup_iter: -1  # no warm up

  # # losses
  # pixel_opt:
  #   type: L1Loss
  #   loss_weight: 1

  edge_opt:
    type: EdgeAwareLoss
    loss_weight: 1
  
  # perceptual_opt:
  #   type: PerceptualLoss
  #   perceptual_weight: 0.9
  #   style_weight: 0.1
  #   layer_weights:
  #     conv3_4: 1.0  # Weight for features from conv3_4 layer
  #     conv4_4: 1.5  # Weight for features from conv4_4 layer
  #     conv5_4: 2.0   # Weight for features from conv5_4 layer



# validation settings
val:
  val_freq: !!float 5e2
  save_img: true #false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ntire2023
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
